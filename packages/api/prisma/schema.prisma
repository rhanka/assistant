generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PlanMethodology {
  AGILE_SCRUM
  KANBAN
  WATERFALL
  HYBRID
}

enum PlanStatus {
  DRAFT
  IN_PROGRESS
  BLOCKED
  COMPLETED
  CANCELLED
}

enum PlanCategory {
  PROJECT
  ACTIVITY
  MILESTONE
  SPRINT
}

enum TaskType {
  EPIC
  STORY
  TASK
  BUG
  SPIKE
  CHORE
  SUB_PLAN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  BLOCKED
  REVIEW
  DONE
  CANCELLED
}

model Plan {
  id           String   @id @default(cuid())
  title        String
  objective    String?
  methodology  PlanMethodology
  status       PlanStatus @default(DRAFT)
  category     PlanCategory @default(PROJECT)
  project      String?
  activity     String?
  constraints  Json?
  customFields Json?
  linksGithubProject String?
  linksGithubMilestone Int?
  tasks        Task[]
  subPlans     Task[]   @relation("TaskSubPlan")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Task {
  id        String   @id @default(cuid())
  planId    String
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  subPlanId String?
  subPlan   Plan?    @relation("TaskSubPlan", fields: [subPlanId], references: [id], onDelete: SetNull)
  title     String
  type      TaskType?
  status    TaskStatus @default(TODO)
  assignee  String?
  labels    String[]
  estimate  Float?
  dueDate   DateTime?
  dependencies String[]
  steps     Json?
  linksGithubIssue String?
  linksGithubPR String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([planId])
  @@index([subPlanId])
}
